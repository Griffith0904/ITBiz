package kr.co.hojeon.controllers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import kr.co.hojeon.beans.BizDailyMasterBean;
import kr.co.hojeon.beans.BizWeeklyBasicSubject;
import kr.co.hojeon.beans.BizWeeklySubject;
import kr.co.hojeon.beans.TableUsrBizTwDetail;
import kr.co.hojeon.beans.UserBean;
import kr.co.hojeon.services.BizWeeklyService;
import kr.co.hojeon.services.MainPageService;

@RestController
public class RestAPIController {
	@Resource(name="loginUserBean")
	@Lazy
	private UserBean loginUserBean;
	
	@Autowired
	private MainPageService mps;
	
	@Autowired
	private BizWeeklyService bws;
	
	@GetMapping("/main/searchAllDataFromStatus/{work_status}")
	public List<BizDailyMasterBean> searchAllDataFromStatus(@PathVariable String work_status) {
		System.out.println("★★★★★★★★★★ searchAllDataFromStatus in RestAPIController ★★★★★★★★★★★★");
		System.out.println(work_status);
		return mps.searchAllDataFromStatusList(work_status);
	}
	
	@GetMapping("/main/searchAllDataByMonthly")
	public List<HashMap<String, Object>> searchAllDataByMonthly() {
		List<HashMap<String, Object>> md = (List<HashMap<String, Object>>)mps.searchAllDataByMonthly();
		System.out.println(md);
		return mps.searchAllDataByMonthly();
	}
	
	@GetMapping("/main/searchFindWorkForTeam")
	public List<HashMap<String, Object>> searchFindWorkForTeam() {
		return mps.searchFindWorkForTeam();
	}
	
	//@GetMapping("/biz/getLastWeekPlaner")
	@RequestMapping(value="/biz/getLastWeekPlaner", method=RequestMethod.GET, produces = "application/text; charset=utf8")
	public String getLastWeekPlaner(@RequestParam("search_year") int search_year, @RequestParam("search_week") int search_week) {
		System.out.println("★★★★★★★★★★ getLastWeekPlaner in RestAPIController ★★★★★★★★★★");
		System.out.println(search_year + ", " + search_week);
		
		String rtn = bws.getLastWeekPlaner(search_year, search_week);
		
		System.out.println(rtn);
		
		return rtn;
	}
	
	@GetMapping("/biz/getThisWeekSubject")
	public List<BizWeeklySubject> getThisWeekSubject(@RequestParam("search_year") int search_year, @RequestParam("search_week") int search_week) {
		System.out.println("★★★★★★★★★★ getThisWeekSubject in RestAPIController ★★★★★★★★★★");
		System.out.println(search_year + ", " + search_week);
		
		return bws.getRegistedThisWorkSubject(search_year, search_week);
	}
	
	@GetMapping("/biz/getNextWeekSubject")
	public List<BizWeeklySubject> getNextWeekSubject(@RequestParam("search_year") int search_year, @RequestParam("search_week") int search_week) {
		System.out.println("★★★★★★★★★★ getThisWeekSubject in RestAPIController ★★★★★★★★★★");
		System.out.println(search_year + ", " + search_week);
		
		return bws.getRegistedNextWorkSubject(search_year, search_week);
	}
	
	@GetMapping("/biz/getJustWeekBasicSubject")
	public List<BizWeeklyBasicSubject> getJustWeekBasicSubject() {		
		return bws.getJustWeekBasicSubject();
	}
	
	//주간 보고 금/차주 통합 Insert
	@PostMapping("/biz/insertUsrBizWeeklyData")
	public List<BizWeeklySubject> insertUsrBizWeeklyData(@RequestParam("year_num") int year_num,
									   @RequestParam("week_num") int week_num,
									   @RequestParam("bws_seq") int bws_seq,
									   @RequestParam("insert_type") int insert_type) {
		//data:{'year_num':main_year_num, 'week_num':main_week_num, 'bws_seq':bws_seq, 'insert_type':subject_modal},
		System.out.println("★★★★★★★★ in insertUsrBizWeeklyData ★★★★★★★★");
		
		TableUsrBizTwDetail tubt = new TableUsrBizTwDetail();
		
		tubt.setYear_num(year_num);
		tubt.setWeek_num(week_num);
		tubt.setWork_user(loginUserBean.getUserid());
		tubt.setBws_seq(bws_seq);
		tubt.setWk_user(loginUserBean.getUserid());
		
		if (insert_type == 1) {
			// 금주
			bws.insertUsrBizWeeklyDataForThisWeek(tubt);
			return getThisWeekSubject(year_num, week_num);
		} else if (insert_type == 2) {
			// 차주
			bws.insertUsrBizWeeklyDataForNextWeek(tubt);
			return getNextWeekSubject(year_num, week_num);
		}
		
		List<BizWeeklySubject> nulls = new ArrayList<BizWeeklySubject>();
		return nulls;
	}
	
	// 해당 bws_seq 별 하위 입력 텍스트 구하기
	//@PostMapping("/biz/getUsrBizWeeklyContent")
	@RequestMapping(value="/biz/getUsrBizWeeklyContent", method=RequestMethod.POST, produces = "application/text; charset=utf8")
	public String getUsrBizWeeklyContent(@RequestParam("year_num") int year_num,
										   @RequestParam("week_num") int week_num,
										   @RequestParam("bws_seq") int bws_seq,
										   @RequestParam("search_type") int search_type) {
		return bws.getUsrBizWeeklyContent(year_num, week_num, bws_seq, search_type);
	}
	
	@PostMapping("/biz/deleteUsrBizWeeklyDetail")
	public List<BizWeeklySubject> deleteUsrBizWeeklyDetail(@RequestParam("year_num") int year_num,
														   @RequestParam("week_num") int week_num,
														   @RequestParam("bws_seq") int bws_seq,
														   @RequestParam("delete_type") int delete_type) {
		
		bws.deleteUsrBizWeeklyContent(year_num, week_num, bws_seq, delete_type);
		
		if (delete_type == 1) {
			// 금주
			return getThisWeekSubject(year_num, week_num);
		} else if (delete_type == 2) {
			// 차주
			return getNextWeekSubject(year_num, week_num);
		}
		
		List<BizWeeklySubject> nulls = new ArrayList<BizWeeklySubject>();
		return nulls;
	}
	
	@PostMapping("/biz/saveUsrBizWeeklyContentData")
	public String deleteUsrBizWeeklyDetail(@RequestParam("year_num") int year_num,
										   @RequestParam("week_num") int week_num,
										   @RequestParam("bws_seq") int bws_seq,
										   @RequestParam("content") String content,
										   @RequestParam("insert_type") int insert_type) {
		
		bws.saveUsrBizWeeklyContentData(year_num, week_num, bws_seq, content, insert_type);
		
		return "OK";
	}
	
	@PostMapping("/biz/copyUsrBizWeekData")
	public List<BizWeeklySubject> copyUsrBizWeekData(@RequestParam("year_num") int year_num,
										   			@RequestParam("week_num") int week_num,
										   			@RequestParam("copy_type") int copy_type) {
		bws.copyToTargetWeelyData(year_num, week_num, copy_type);
		
		if (copy_type == 1) {
			// 금주
			return getThisWeekSubject(year_num, week_num);
		} else if (copy_type == 2) {
			// 차주
			return getNextWeekSubject(year_num, week_num);
		}
		
		List<BizWeeklySubject> nulls = new ArrayList<BizWeeklySubject>();
		return nulls;
	}
}
